
cd "$(dirname "${BASH_SOURCE[0]}")"
cd ..

buildx()(
    CDP="${1:?Provide cd into path}"
    IMAGE="${2:?Provide image}"
    FILE="${3:?Provide Dockerfile}"

    cd "$CDP" || return

    # docker build \
    #     --no-cache \
    #     -f "$FILE" \
    #     -t "$IMAGE"

    docker buildx build \
        --no-cache \
        --platform linux/arm,linux/arm64,linux/amd64 \
        -f "$FILE" \
        -t "$IMAGE" . --push
)

main(){
    while [ "$#" -gt 0 ]; do
        op="$1";    shift
        case "$op" in
        # Section: alpine
            alpine)             main alpine-1-curl && main alpine-2-dev           ;;
            alpine-1-curl)      buildx src/alpine xcmd/base-alpine-1-curl  1-curl.Dockerfile   ;;
            alpine-2-dev)       buildx src/alpine xcmd/base-alpine-2-dev   2-dev.Dockerfile    ;;
        # EndSection

        # Section: debian
            debian)             main debian-1-curl && main debian-2-dev           ;;
            debian-1-curl)      buildx src/debian xcmd/base-debian-1-curl  1-curl.Dockerfile   ;;
            debian-2-dev)       buildx src/debian xcmd/base-debian-2-dev   2-dev.Dockerfile    ;;
        # EndSection

        # Section: ubuntu
            ubuntu)             main ubuntu-1-curl && main ubuntu-2-dev           ;;
            ubuntu-1-curl)      buildx src/ubuntu xcmd/base-ubuntu-1-curl  1-curl.Dockerfile   ;;
            ubuntu-2-dev)       buildx src/ubuntu xcmd/base-ubuntu-2-dev   2-dev.Dockerfile    ;;
        # EndSection
            *)                  main alpine && main debian & main ubuntu
        esac
    done
}

main "$@"
